@page "/product"
@using System.Globalization
@inject IProductRepository _productRepository
@inject IJSRuntime _js

<BSModal OnModalConfirmation="ConfirmDelete_Click"
    ButtonBS_Style="btn-danger"
    ButtonText="Delete"
Title="Are you sure you want to delete this Product?">
</BSModal>

@if(IsProcessing)
{
    <div class="position-absolute w-75 h-75 d-flex flex-column align-items-center bg-white justify-content-center">
        <img src="/images/loading.gif" />
    </div>
}
else
{
    <div class="card shadow border-0 m-4">
        <div class="card-header bg-black bg-gradient ml-0 py-3">
            <div class="row">
                <div class="col-12 text-center">
                    <h2 class="text-white py-2">Product List</h2>
                </div>
            </div>
        </div>
        <div class="card-body p-4">
            <div class="row pb-3">
                <div class="col-12 text-end">
                    <a href="product/create" class="btn bth-lg btn-secondary" style="width:250px">
                        <i class="bi bi-plus-square"> Add New Product</i>
                    </a>
                </div>
            </div>
            <p>Product's List</p>
            @if(products.Any())
            {
                <table class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Price</th>
                            <th>Special Tag</th>
                            <th>Category</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var obj in products)
                        {
                            <tr>
                                <td>@obj.Name</td>
                                <td>@obj.Price.ToString("C", CultureInfo.GetCultureInfo("en-us"))</td>
                                <td><span class="badge text-bg-info">@obj.SpecialTag</span></td>
                                <td>@obj.Category.Name</td>
                                <td> 
                                    <a href="@($"product/update/{obj.Id}")" class="btn btn-primary">
                                        <i class="bi bi-pencil-square"></i> Edit
                                    </a>
                                    <button class="btn btn-danger" @onclick="()=>HandleDelete(obj.Id)">
                                        <i class="bi bi-trash"></i> Delete
                                    </button>
                                </td>

                            </tr>
                        }
                    </tbody>

                </table>
            }
        </div>
    </div>
}

@code {
    private bool IsProcessing { get; set; } = true;
    private IEnumerable<Product> products { get; set; } = new List<Product>();

    private int DeleteProductId { get; set; } = 0;


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            await loadCategories();
            IsProcessing = false;
            StateHasChanged();
        }
    }

    private async Task loadCategories()
    {
        // Load products 
        products = await _productRepository.GetAllAsync();
    }

    private void HandleDelete(int id)
    {
        DeleteProductId = id;
        _js.InvokeVoidAsync("ShowConfirmationModal");

    }

    private async Task ConfirmDelete_Click(bool isConfirmed)
    {
        IsProcessing = true;
        await _js.InvokeVoidAsync("HideConfirmationModal");
        if(isConfirmed && DeleteProductId != 0)
        {
            var result = await _productRepository.DeleteAsync(DeleteProductId);
            if(result)
            {
                _js?.ToastrSuccess("Product Deleted Successfully");
            }
            else
            {
                _js?.ToastrError("Error while deleting Product");
            }
            await loadCategories();
        }

        DeleteProductId = 0;
        IsProcessing = false;
    }
}